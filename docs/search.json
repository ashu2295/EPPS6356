[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "EPPS6356",
    "section": "",
    "text": "My name is Ashutosh Patel. This is my website for the Fall 2023 class - Data visualization."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Assignment 1.html",
    "href": "Assignment 1.html",
    "title": "Assignment 1",
    "section": "",
    "text": "QUESTION 1\n\n## Anscombe (1973) Quartlet\n\ndata(anscombe)  # Load Anscombe's data\n#View(anscombe) # View the data\nsummary(anscombe)\n\n       x1             x2             x3             x4           y1        \n Min.   : 4.0   Min.   : 4.0   Min.   : 4.0   Min.   : 8   Min.   : 4.260  \n 1st Qu.: 6.5   1st Qu.: 6.5   1st Qu.: 6.5   1st Qu.: 8   1st Qu.: 6.315  \n Median : 9.0   Median : 9.0   Median : 9.0   Median : 8   Median : 7.580  \n Mean   : 9.0   Mean   : 9.0   Mean   : 9.0   Mean   : 9   Mean   : 7.501  \n 3rd Qu.:11.5   3rd Qu.:11.5   3rd Qu.:11.5   3rd Qu.: 8   3rd Qu.: 8.570  \n Max.   :14.0   Max.   :14.0   Max.   :14.0   Max.   :19   Max.   :10.840  \n       y2              y3              y4        \n Min.   :3.100   Min.   : 5.39   Min.   : 5.250  \n 1st Qu.:6.695   1st Qu.: 6.25   1st Qu.: 6.170  \n Median :8.140   Median : 7.11   Median : 7.040  \n Mean   :7.501   Mean   : 7.50   Mean   : 7.501  \n 3rd Qu.:8.950   3rd Qu.: 7.98   3rd Qu.: 8.190  \n Max.   :9.260   Max.   :12.74   Max.   :12.500  \n\n## Simple version\nplot(anscombe$x1,anscombe$y1)\nsummary(anscombe)\n\n       x1             x2             x3             x4           y1        \n Min.   : 4.0   Min.   : 4.0   Min.   : 4.0   Min.   : 8   Min.   : 4.260  \n 1st Qu.: 6.5   1st Qu.: 6.5   1st Qu.: 6.5   1st Qu.: 8   1st Qu.: 6.315  \n Median : 9.0   Median : 9.0   Median : 9.0   Median : 8   Median : 7.580  \n Mean   : 9.0   Mean   : 9.0   Mean   : 9.0   Mean   : 9   Mean   : 7.501  \n 3rd Qu.:11.5   3rd Qu.:11.5   3rd Qu.:11.5   3rd Qu.: 8   3rd Qu.: 8.570  \n Max.   :14.0   Max.   :14.0   Max.   :14.0   Max.   :19   Max.   :10.840  \n       y2              y3              y4        \n Min.   :3.100   Min.   : 5.39   Min.   : 5.250  \n 1st Qu.:6.695   1st Qu.: 6.25   1st Qu.: 6.170  \n Median :8.140   Median : 7.11   Median : 7.040  \n Mean   :7.501   Mean   : 7.50   Mean   : 7.501  \n 3rd Qu.:8.950   3rd Qu.: 7.98   3rd Qu.: 8.190  \n Max.   :9.260   Max.   :12.74   Max.   :12.500  \n\n# Create four model objects\nlm1 &lt;- lm(y1 ~ x1, data=anscombe)\nsummary(lm1)\n\n\nCall:\nlm(formula = y1 ~ x1, data = anscombe)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1.92127 -0.45577 -0.04136  0.70941  1.83882 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)   3.0001     1.1247   2.667  0.02573 * \nx1            0.5001     0.1179   4.241  0.00217 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.237 on 9 degrees of freedom\nMultiple R-squared:  0.6665,    Adjusted R-squared:  0.6295 \nF-statistic: 17.99 on 1 and 9 DF,  p-value: 0.00217\n\nlm2 &lt;- lm(y2 ~ x2, data=anscombe)\nsummary(lm2)\n\n\nCall:\nlm(formula = y2 ~ x2, data = anscombe)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-1.9009 -0.7609  0.1291  0.9491  1.2691 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)    3.001      1.125   2.667  0.02576 * \nx2             0.500      0.118   4.239  0.00218 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.237 on 9 degrees of freedom\nMultiple R-squared:  0.6662,    Adjusted R-squared:  0.6292 \nF-statistic: 17.97 on 1 and 9 DF,  p-value: 0.002179\n\nlm3 &lt;- lm(y3 ~ x3, data=anscombe)\nsummary(lm3)\n\n\nCall:\nlm(formula = y3 ~ x3, data = anscombe)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-1.1586 -0.6146 -0.2303  0.1540  3.2411 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)   3.0025     1.1245   2.670  0.02562 * \nx3            0.4997     0.1179   4.239  0.00218 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.236 on 9 degrees of freedom\nMultiple R-squared:  0.6663,    Adjusted R-squared:  0.6292 \nF-statistic: 17.97 on 1 and 9 DF,  p-value: 0.002176\n\nlm4 &lt;- lm(y4 ~ x4, data=anscombe)\nsummary(lm4)\n\n\nCall:\nlm(formula = y4 ~ x4, data = anscombe)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-1.751 -0.831  0.000  0.809  1.839 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)   3.0017     1.1239   2.671  0.02559 * \nx4            0.4999     0.1178   4.243  0.00216 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.236 on 9 degrees of freedom\nMultiple R-squared:  0.6667,    Adjusted R-squared:  0.6297 \nF-statistic:    18 on 1 and 9 DF,  p-value: 0.002165\n\nplot(anscombe$x1,anscombe$y1)\nabline(coefficients(lm1))\n\n\n\nplot(anscombe$x2,anscombe$y2)\nabline(coefficients(lm2))\n\n\n\nplot(anscombe$x3,anscombe$y3)\nabline(coefficients(lm3))\n\n\n\nplot(anscombe$x4,anscombe$y4)\nabline(coefficients(lm4))\n\n\n\n## Fancy version (per help file)\n\nff &lt;- y ~ x\nmods &lt;- setNames(as.list(1:4), paste0(\"lm\", 1:4))\n\n# Plot using for loop\nfor(i in 1:4) {\n  ff[2:3] &lt;- lapply(paste0(c(\"y\",\"x\"), i), as.name)\n  ## or   ff[[2]] &lt;- as.name(paste0(\"y\", i))\n  ##      ff[[3]] &lt;- as.name(paste0(\"x\", i))\n  mods[[i]] &lt;- lmi &lt;- lm(ff, data = anscombe)\n  print(anova(lmi))\n}\n\nAnalysis of Variance Table\n\nResponse: y1\n          Df Sum Sq Mean Sq F value  Pr(&gt;F)   \nx1         1 27.510 27.5100   17.99 0.00217 **\nResiduals  9 13.763  1.5292                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nAnalysis of Variance Table\n\nResponse: y2\n          Df Sum Sq Mean Sq F value   Pr(&gt;F)   \nx2         1 27.500 27.5000  17.966 0.002179 **\nResiduals  9 13.776  1.5307                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nAnalysis of Variance Table\n\nResponse: y3\n          Df Sum Sq Mean Sq F value   Pr(&gt;F)   \nx3         1 27.470 27.4700  17.972 0.002176 **\nResiduals  9 13.756  1.5285                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nAnalysis of Variance Table\n\nResponse: y4\n          Df Sum Sq Mean Sq F value   Pr(&gt;F)   \nx4         1 27.490 27.4900  18.003 0.002165 **\nResiduals  9 13.742  1.5269                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nsapply(mods, coef)  # Note the use of this function\n\n                  lm1      lm2       lm3       lm4\n(Intercept) 3.0000909 3.000909 3.0024545 3.0017273\nx1          0.5000909 0.500000 0.4997273 0.4999091\n\nlapply(mods, function(fm) coef(summary(fm)))\n\n$lm1\n             Estimate Std. Error  t value    Pr(&gt;|t|)\n(Intercept) 3.0000909  1.1247468 2.667348 0.025734051\nx1          0.5000909  0.1179055 4.241455 0.002169629\n\n$lm2\n            Estimate Std. Error  t value    Pr(&gt;|t|)\n(Intercept) 3.000909  1.1253024 2.666758 0.025758941\nx2          0.500000  0.1179637 4.238590 0.002178816\n\n$lm3\n             Estimate Std. Error  t value    Pr(&gt;|t|)\n(Intercept) 3.0024545  1.1244812 2.670080 0.025619109\nx3          0.4997273  0.1178777 4.239372 0.002176305\n\n$lm4\n             Estimate Std. Error  t value    Pr(&gt;|t|)\n(Intercept) 3.0017273  1.1239211 2.670763 0.025590425\nx4          0.4999091  0.1178189 4.243028 0.002164602\n\n# Preparing for the plots\nop &lt;- par(mfrow = c(2, 2), mar = 0.1+c(4,4,1,1), oma =  c(0, 0, 2, 0))\n\n# Plot charts using for loop\nfor(i in 1:4) {\n  ff[2:3] &lt;- lapply(paste0(c(\"y\",\"x\"), i), as.name)\n  plot(ff, data = anscombe, col = \"red\", pch = 21, bg = \"orange\", cex = 1.2,\n       xlim = c(3, 19), ylim = c(3, 13))\n  abline(mods[[i]], col = \"blue\")\n}\nmtext(\"Anscombe's 4 Regression data sets\", outer = TRUE, cex = 1.5)\n\n\n\npar(op)\n\n________________________________________________________________________________________________________________\nQUESTION 2\n\n\n\nGenerative Art - A\n\n\n\n\n\nGenerative Art - B\n\n\n________________________________________________________________________________________________________________\nQUESTION 3\n\n# Title Fall color\n# Credit: https://fronkonstin.com\n\n# Install packages\n\n#install.packages(\"gsubfn\")\n#install.packages(\"tidyverse\")\nlibrary(gsubfn)\n\nLoading required package: proto\n\nlibrary(tidyverse)\n\nWarning: package 'ggplot2' was built under R version 4.3.2\n\n\nWarning: package 'lubridate' was built under R version 4.3.2\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# Define elements in plant art\n# Each image corresponds to a different axiom, rules, angle and depth\n\n# Leaf of Fall\n\naxiom=\"X\"\nrules=list(\"X\"=\"F-[[X]+X]+F[+FX]-X\", \"F\"=\"FF\")\nangle=22.5\ndepth=6\n\n\nfor (i in 1:depth) axiom=gsubfn(\".\", rules, axiom)\n\nactions=str_extract_all(axiom, \"\\\\d*\\\\+|\\\\d*\\\\-|F|L|R|\\\\[|\\\\]|\\\\|\") %&gt;% unlist\n\nstatus=data.frame(x=numeric(0), y=numeric(0), alfa=numeric(0))\npoints=data.frame(x1 = 0, y1 = 0, x2 = NA, y2 = NA, alfa=90, depth=1)\n\n\n# Generating data\n# Note: may take a minute or two\n\nfor (action in actions)\n{\n  if (action==\"F\")\n  {\n    x=points[1, \"x1\"]+cos(points[1, \"alfa\"]*(pi/180))\n    y=points[1, \"y1\"]+sin(points[1, \"alfa\"]*(pi/180))\n    points[1,\"x2\"]=x\n    points[1,\"y2\"]=y\n    data.frame(x1 = x, y1 = y, x2 = NA, y2 = NA,\n               alfa=points[1, \"alfa\"],\n               depth=points[1,\"depth\"]) %&gt;% rbind(points)-&gt;points\n  }\n  if (action %in% c(\"+\", \"-\")){\n    alfa=points[1, \"alfa\"]\n    points[1, \"alfa\"]=eval(parse(text=paste0(\"alfa\",action, angle)))\n  }\n  if(action==\"[\"){\n    data.frame(x=points[1, \"x1\"], y=points[1, \"y1\"], alfa=points[1, \"alfa\"]) %&gt;%\n      rbind(status) -&gt; status\n    points[1, \"depth\"]=points[1, \"depth\"]+1\n  }\n\n  if(action==\"]\"){\n    depth=points[1, \"depth\"]\n    points[-1,]-&gt;points\n    data.frame(x1=status[1, \"x\"], y1=status[1, \"y\"], x2=NA, y2=NA,\n               alfa=status[1, \"alfa\"],\n               depth=depth-1) %&gt;%\n      rbind(points) -&gt; points\n    status[-1,]-&gt;status\n  }\n}\n\nggplot() +\n  geom_segment(aes(x = x1, y = y1, xend = x2, yend = y2),\n               lineend = \"round\",\n               color=\"blueviolet\", # Set your own Fall color?\n               data=na.omit(points)) +\n  coord_fixed(ratio = 1) +\n  theme_void() # No grid nor axes\n\n\n\n\n________________________________________________________________________________________________________________\nQUESTION 4\n\n# This chart can be obtained from the website https://www.tylervigen.com/spurious-correlations.\n\n# It is an example of spurious correlation. It is a line chart with 2 y-axis.\n# Data on the x-axis represents the bedsheet tanglings for that particular year.\n# Data on the left y-axis is the year round data of the total amount of pounds of \n# cheese consumption. The number on the right y-axis is the number of deaths.\n# Data on x-axis is from the year 2000-2009. Cheese consumption is red in color. \n# Bedsheet Tanglings is black in color. Highest deaths happened in the Year 2009. \n# Highest Cheese Consumption happened in # the Year 2008 and it was north of 33lbs\n# It's quite evident that cheese  consumption has one-to-one relation with the \n# deaths happened by bedsheet tangling. So next time when you are munching on \n# cheese, keep this trivia in mind.\n\n\n\n\n\n\nCheese Consumption leads to death by getting tangled in the bedsheet"
  },
  {
    "objectID": "Hackathon.html",
    "href": "Hackathon.html",
    "title": "Hackathon",
    "section": "",
    "text": "library(ggplot2)\n\nsales_data &lt;- data.frame(\n  Fruit = c(\"Small Apples\", \"Medium Apples\", \"Large Apples\", \"Small Oranges\", \"Large Oranges\"),\n  Quantity = c(10, 15, 20, 8, 25),\n  Width = c(0.3, 0.5, 0.7, 0.3, 0.7)  # Specify the widths for each bar\n)\n\nchart1 &lt;- ggplot(sales_data, aes(x = Fruit, y = Quantity, width = Width)) +\n  geom_bar(stat = \"identity\", fill = \"coral\") +\n  labs(title = \"Sales for Fruits of Different Sizes\", x = \"Fruit\", y = \"Quantity Sold\") +\n  theme(text=element_text(size=12,  family=\"serif\"), plot.title = element_text(hjust = 0.5))\n  \nprint(chart1)\n\n\n\n\n\nlibrary(gridExtra)\ndata1 &lt;- data.frame(\n  Product = c(\"A\", \"B\", \"C\", \"D\"),\n  Revenue = c(5000, 7000, 6500, 3000)\n)\n\ndata2 &lt;- data.frame(\n  Product = c(\"A\", \"B\", \"C\", \"D\"),\n  Revenue = c(2000, 5000, 6000, 1000)\n)\n\nstore1 &lt;- ggplot(data1, aes(x = Product, y = Revenue)) +\n  geom_bar(stat = \"identity\", fill = \"midnightblue\", alpha = 0.7) +\n  labs(title = \"Store 1: Product Revenue\", x = \"Product Type\", y = \"Revenue (USD)\") +\n  theme(text=element_text(size=12, family=\"serif\"), plot.title = element_text(hjust = 0.5))\n\nstore2 &lt;- ggplot(data2, aes(x = Product, y = Revenue)) +\n  geom_bar(stat = \"identity\", fill = \"seagreen4\", alpha = 0.7) +\n  labs(title = \"Store 2: Product Revenue\", x = \"Product Type\", y = \"Revenue (USD)\") +\n  theme(text=element_text(size=12, family=\"serif\"), plot.title = element_text(hjust = 0.5))\n\ncombined_chart &lt;- grid.arrange(store1, store2, ncol = 2)\n\n\n\n\n\nsales_data &lt;- data.frame(\n  Fruit = c(\"Apples\", \"Oranges\", \"Pears\", \"Kiwis\", \"Bananas\", \"Pineapples\", \"Peaches\"),\n  Quantity = c(10, 15, 20, 8, 25, 12, 18)\n)\n\nchart3 &lt;- ggplot(sales_data, aes(x = Quantity, y = Fruit)) +\n  geom_bar(stat = \"identity\", fill = \"darkslategray4\") +\n  labs(title = \"Sales for Different Fruits\", x = \"Quantity Sold\", y = \"Type of Fruit\") + \n  theme(text=element_text(size=12, family=\"serif\"), plot.title = element_text(hjust = 0.5))\n\nprint(chart3)\n\n\n\n\n\nhobbies &lt;- c(\"Baking\", \"Drawing\", \"Reading\")\ndata1 &lt;- c(20, 30, 15)\ndata2 &lt;- c(25, 15, 10)\ndata3 &lt;- c(15, 10, 13)\n\ndata_matrix &lt;- matrix(c(data1, data2, data3), nrow = length(hobbies), byrow = TRUE)\n\nbar_colors &lt;- c(\"firebrick\", \"navajowhite3\", \"darkolivegreen\")\nbar_labels &lt;- c(\"Yes\", \"No\", \"Maybe\")\n\nbarplot(data_matrix, beside = TRUE, col = bar_colors, names.arg = hobbies, main = \"Survey Reponses to Hobby Interests\", xlab = \"Hobby Categories\", ylab = \"Total Number of Reponses\", family=\"serif\")\n\nlegend(\"topright\", legend = bar_labels, fill = bar_colors)"
  },
  {
    "objectID": "Assignment 5.html",
    "href": "Assignment 5.html",
    "title": "Assignment 5",
    "section": "",
    "text": "# Create a sample dataset\ndata &lt;- rnorm(100)\n\n# Create a histogram\nhist(data, main=\"Histogram\", xlab=\"Value\", ylab=\"Frequency\", col=\"lightblue\", border=\"black\")\n\n\n\n\n\n# Create a sample dataset\ncategories &lt;- c(\"Category A\", \"Category B\", \"Category C\")\nvalues &lt;- c(30, 45, 60)\n\n# Create a bar chart\nbarplot(values, names.arg=categories, main=\"Bar Chart\", horiz = TRUE, xlab=\"Category\", ylab=\"Value\", col=\"lightblue\")\n\n\n\n\n\n# Create a sample dataset\ncategories &lt;- c(\"Category A\", \"Category B\", \"Category C\")\nvalues &lt;- c(30, 45, 60)\n\n# Create a horizontal bar chart\nbarplot(values, names.arg=categories, main=\"Horizontal Bar Chart\", xlab=\"Value\", ylab=\"Category\", col=\"lightblue\")\n\n\n\n\n\n# Create a sample dataset\ncategories &lt;- c(\"Category A\", \"Category B\", \"Category C\")\nvalues &lt;- c(30, 45, 60)\n\n# Create a pie chart\npie(values, labels=categories, main=\"Pie Chart\", col=c(\"lightblue\", \"lightgreen\", \"lightcoral\"))\n\n\n\n\n\n# Create a sample dataset\ndata &lt;- list(a=rnorm(100), b=rnorm(100, mean=2), c=rnorm(100, mean=3))\n\n# Create a box plot\nboxplot(data, main=\"Box Plot\", xlab=\"Group\", ylab=\"Value\", col=c(\"lightblue\", \"lightgreen\", \"lightcoral\"))\n\n\n\n\n\n# Create a sample dataset\nx &lt;- rnorm(50)\ny &lt;- rnorm(50)\n\n# Create a scatter plot\nplot(x, y, main=\"Scatter Plot\", xlab=\"X-axis\", ylab=\"Y-axis\", col=\"blue\", pch=19)\n\n\n\n\n\nlibrary(ggplot2)\n\nWarning: package 'ggplot2' was built under R version 4.2.3\n\n# Create a sample dataset\ndata &lt;- data.frame(Value=rnorm(100))\n\n\nhistogram &lt;- ggplot(data=data, aes(x=Value, fill = categories)) +\n  geom_histogram(binwidth=0.5, fill=\"lightblue\", color=\"black\") +\n  labs(title=\"Histogram\", x=\"Value\", y=\"Frequency\") +\ntheme(plot.background = element_rect(color = \"black\", size = 1)) + \n   scale_fill_manual(values = c(\"lightblue\", \"lightgreen\", \"lightcoral\")) +\n  guides(fill = guide_legend(title = \"Categories\"))\n\nWarning: The `size` argument of `element_rect()` is deprecated as of ggplot2 3.4.0.\nℹ Please use the `linewidth` argument instead.\n\n # theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\nhistogram\n\n\n\n################\n\n# Create a sample dataset\ncategories &lt;- c(\"Category A\", \"Category B\", \"Category C\")\nvalues &lt;- c(30, 45, 60)\ndata &lt;- data.frame(Category=categories, Value=values)\n\n# Create a bar chart\n#barplot(values, names.arg=categories, main=\"Bar Chart\", horiz = TRUE, xlab=\"Category\", ylab=\"Value\", col=\"lightblue\")\n\nggplot(data=data, aes(x=Category, y =Value)) +\n  geom_bar(fill=\"navyblue\", color=\"black\", stat=\"identity\") +\n  labs(title=\"Vertical Bar Plot\", x=\"Category\", y=\"Value\") + \n  coord_flip()\n\n\n\nggplot(data=data, aes(x=Category, y=Value)) +\n  geom_bar(stat=\"identity\", fill=\"lightblue\") +\n  labs(title=\"Bar Chart\", x=\"Category\", y=\"Value\") \n\n\n\n################\n\n\n# Create a sample dataset\ncategories &lt;- c(\"Category A\", \"Category B\", \"Category C\")\nvalues &lt;- c(30, 45, 60)\ndata &lt;- data.frame(Category=categories, Value=values)\n\n# Create a pie chart\nggplot(data=data, aes(x=\"\", y=Value, fill=Category)) +\n  geom_bar(stat=\"identity\") +\n  coord_polar(theta=\"y\") +\n  labs(title=\"Pie Chart\")\n\n\n\n##################\n\n\n\ndata &lt;- data.frame(Group=rep(c(\"A\", \"B\", \"C\"), each=100),\n                   Value=c(rnorm(100), rnorm(100, mean=2), rnorm(100, mean=3)))\n\n# Create a box plot\nggplot(data=data, aes(x=Group, y=Value, fill=Group)) +\n  geom_boxplot() +\n  labs(title=\"Box Plot\", x=\"Group\", y=\"Value\")\n\n\n\n###################\n\n\n# Create a sample dataset\ndata &lt;- data.frame(X=rnorm(50), Y=rnorm(50))\n\n# Create a scatter plot\nggplot(data=data, aes(x=X, y=Y)) +\n  geom_point(shape=19, color=\"blue\") +\n  labs(title=\"Scatter Plot\", x=\"X-axis\", y=\"Y-axis\") +\n  theme(axis.text.y = element_text(angle = 45, hjust = 1))\n\n\n\n####################\n\n\nggsave(\"pie_chart.pdf\", plot = histogram, device = \"pdf\")\n\nSaving 7 x 5 in image\n\nggsave(\"pie_chart.jpg\", plot = histogram, device = \"jpeg\", dpi = 300)  \n\nSaving 7 x 5 in image\n\nlibrary(svglite)\n\nWarning: package 'svglite' was built under R version 4.2.3\n\nggsave(\"pie_chart.svg\", plot = histogram, device = \"svg\")\n\nSaving 7 x 5 in image\n\nggsave(\"pie_chart.tiff\", plot = histogram, device = \"tiff\")\n\nSaving 7 x 5 in image\n\nggsave(\"pie_chart.bmp\", plot = histogram, device = \"bmp\")\n\nSaving 7 x 5 in image"
  },
  {
    "objectID": "Assignment 4.html",
    "href": "Assignment 4.html",
    "title": "Assignment 4",
    "section": "",
    "text": "library(ggplot2)\n\nWarning: package 'ggplot2' was built under R version 4.3.2\n\nsales_data &lt;- data.frame(\n  Fruit = c(\"Small Apples\", \"Medium Apples\", \"Large Apples\", \"Small Oranges\", \"Large Oranges\"),\n  Quantity = c(10, 15, 20, 8, 25),\n  Width = c(0.3, 0.5, 0.7, 0.3, 0.7)  # Specify the widths for each bar\n)\n\nchart1 &lt;- ggplot(sales_data, aes(x = Fruit, y = Quantity, width = Width)) +\n  geom_bar(stat = \"identity\", fill = \"coral\") +\n  labs(title = \"Sales for Fruits of Different Sizes\", x = \"Fruit\", y = \"Quantity Sold\") +\n  theme(text=element_text(size=12,  family=\"serif\"), plot.title = element_text(hjust = 0.5))\n  \nprint(chart1)\n\n\n\n\n\nlibrary(gridExtra)\ndata1 &lt;- data.frame(\n  Product = c(\"A\", \"B\", \"C\", \"D\"),\n  Revenue = c(5000, 7000, 6500, 3000)\n)\n\ndata2 &lt;- data.frame(\n  Product = c(\"A\", \"B\", \"C\", \"D\"),\n  Revenue = c(2000, 5000, 6000, 1000)\n)\n\nstore1 &lt;- ggplot(data1, aes(x = Product, y = Revenue)) +\n  geom_bar(stat = \"identity\", fill = \"midnightblue\", alpha = 0.7) +\n  labs(title = \"Store 1: Product Revenue\", x = \"Product Type\", y = \"Revenue (USD)\") +\n  theme(text=element_text(size=12, family=\"serif\"), plot.title = element_text(hjust = 0.5))\n\nstore2 &lt;- ggplot(data2, aes(x = Product, y = Revenue)) +\n  geom_bar(stat = \"identity\", fill = \"seagreen4\", alpha = 0.7) +\n  labs(title = \"Store 2: Product Revenue\", x = \"Product Type\", y = \"Revenue (USD)\") +\n  theme(text=element_text(size=12, family=\"serif\"), plot.title = element_text(hjust = 0.5))\n\ncombined_chart &lt;- grid.arrange(store1, store2, ncol = 2)\n\n\n\n\n\nsales_data &lt;- data.frame(\n  Fruit = c(\"Apples\", \"Oranges\", \"Pears\", \"Kiwis\", \"Bananas\", \"Pineapples\", \"Peaches\"),\n  Quantity = c(10, 15, 20, 8, 25, 12, 18)\n)\n\nchart3 &lt;- ggplot(sales_data, aes(x = Quantity, y = Fruit)) +\n  geom_bar(stat = \"identity\", fill = \"darkslategray4\") +\n  labs(title = \"Sales for Different Fruits\", x = \"Quantity Sold\", y = \"Type of Fruit\") + \n  theme(text=element_text(size=12, family=\"serif\"), plot.title = element_text(hjust = 0.5))\n\nprint(chart3)\n\n\n\n\n\nhobbies &lt;- c(\"Baking\", \"Drawing\", \"Reading\")\ndata1 &lt;- c(20, 30, 15)\ndata2 &lt;- c(25, 15, 10)\ndata3 &lt;- c(15, 10, 13)\n\ndata_matrix &lt;- matrix(c(data1, data2, data3), nrow = length(hobbies), byrow = TRUE)\n\nbar_colors &lt;- c(\"firebrick\", \"navajowhite3\", \"darkolivegreen\")\nbar_labels &lt;- c(\"Yes\", \"No\", \"Maybe\")\n\nbarplot(data_matrix, beside = TRUE, col = bar_colors, names.arg = hobbies, main = \"Survey Reponses to Hobby Interests\", xlab = \"Hobby Categories\", ylab = \"Total Number of Reponses\", family=\"serif\")\n\nlegend(\"topright\", legend = bar_labels, fill = bar_colors)"
  },
  {
    "objectID": "Assignment 2.html",
    "href": "Assignment 2.html",
    "title": "Ashutosh's Website",
    "section": "",
    "text": "q— title: “Assignment 2”\n\nQuestion 1\n\nplot(pressure, pch=9)  # Can you change pch? - 'pch value changed to 9 from 16.'\ntext(150, 600, \n     \"Pressure (mm Hg)\\nversus\\nTemperature (Celsius)\")\n\n\n\n\nPch value changed to 9 from the default value in the code 16. It changed the shape of the symbols plotted in the above graph.\n\n# Setting the parameter (3 rows by 2 cols)\npar(mfrow=c(3, 2))\n\n# Scatterplot\n# Note the incremental additions\n\nx &lt;- c(0.5, 2, 4, 8, 12, 16)\ny1 &lt;- c(1, 1.3, 1.9, 3.4, 3.9, 4.8)\ny2 &lt;- c(4, .8, .5, .45, .4, .3)\n\n# Setting label orientation, margins c(bottom, left, top, right) & text size\npar(las=1, mar=c(4, 4, 2, 4), cex=.7) \nplot.new()\nplot.window(range(x), c(0, 6))\nlines(x, y1)\nlines(x, y2)\npoints(x, y1, pch=16, cex=1.4) # Try different cex value? - 'cex value changed to 1.4 from 2.'  \npoints(x, y2, pch=21, bg=\"cornsilk3\", cex=2)  # Different background color - 'background color changed to cornsilk3 from white.'\npar(col=\"gray50\", fg=\"gray50\", col.axis=\"gray50\")\naxis(1, at=seq(0, 16, 4)) # What is the first number standing for?\naxis(2, at=seq(0, 6, 2))\naxis(4, at=seq(0, 6, 2))\nbox(bty=\"u\")\nmtext(\"Travel Time (s)\", side=1, line=2, cex=0.8)\nmtext(\"Responses per Travel\", side=2, line=2, las=0, cex=0.8)\nmtext(\"Responses per Second\", side=4, line=2, las=0, cex=0.8)\ntext(4, 5, \"Bird 131\")\npar(mar=c(5.1, 4.1, 4.1, 2.1), col=\"black\", fg=\"black\", col.axis=\"black\")\n\n# Histogram\n# Random data\nY &lt;- rnorm(50)\n# Make sure no Y exceed [-3.5, 3.5]\nY[Y &lt; -3.5 | Y &gt; 3.5] &lt;- NA # Selection/set range\nx &lt;- seq(-3.5, 3.5, .1)\ndn &lt;- dnorm(x)\npar(mar=c(4.5, 4.1, 3.1, 0))\nhist(Y, breaks=seq(-3.5, 3.5), ylim=c(0, 0.5), \n     col=\"gray80\", freq=FALSE)\nlines(x, dnorm(x), lwd=2)\npar(mar=c(5.1, 4.1, 4.1, 2.1))\n\n# Barplot\npar(mar=c(2, 3.1, 2, 2.1)) \nmidpts &lt;- barplot(VADeaths, \n                  col=gray(0.1 + seq(1, 9, 2)/11), \n                  names=rep(\"\", 4))\nmtext(sub(\" \", \"\\n\", colnames(VADeaths)),\n      at=midpts, side=1, line=0.5, cex=0.5)\ntext(rep(midpts, each=5), apply(VADeaths, 2, cumsum) - VADeaths/2,\n     VADeaths, \n     col=rep(c(\"white\", \"black\"), times=3:2), \n     cex=0.8)\npar(mar=c(5.1, 4.1, 4.1, 2.1))  \n\n# Boxplot\npar(mar=c(3, 4.1, 2, 0))\nboxplot(len ~ dose, data = ToothGrowth,\n        boxwex = 0.25, at = 1:3 - 0.2,\n        subset= supp == \"VC\", col=\"white\",\n        xlab=\"\",\n        ylab=\"tooth length\", ylim=c(0,35))\nmtext(\"Vitamin C dose (mg)\", side=1, line=2.5, cex=0.8)\nboxplot(len ~ dose, data = ToothGrowth, add = TRUE,\n        boxwex = 0.25, at = 1:3 + 0.2,\n        \n        subset= supp == \"OJ\")\nlegend(1.5, 9, c(\"Ascorbic acid\", \"Orange juice\"), \n       fill = c(\"white\", \"gray\"), \n       bty=\"n\")\npar(mar=c(5.1, 4.1, 4.1, 2.1))\n\n# Persp\nx &lt;- seq(-10, 10, length= 30)\ny &lt;- x\nf &lt;- function(x,y) { r &lt;- sqrt(x^2+y^2); 10 * sin(r)/r }\nz &lt;- outer(x, y, f)\nz[is.na(z)] &lt;- 1\n# 0.5 to include z axis label\npar(mar=c(0, 0.5, 0, 0), lwd=0.5)\npersp(x, y, z, theta = 30, phi = 30, \n      expand = 0.5)\npar(mar=c(5.1, 4.1, 4.1, 2.1), lwd=1)\n\n# Piechart\npar(mar=c(0, 2, 1, 2), xpd=FALSE, cex=0.5)\npie.sales &lt;- c(0.12, 0.3, 0.26, 0.16, 0.04, 0.12)\nnames(pie.sales) &lt;- c(\"Blueberry\", \"Cherry\",\n                      \"Apple\", \"Boston Cream\", \"Other\", \"Vanilla\")\npie(pie.sales, col = gray(seq(0.3,1.0,length=6)))\n\n\n\n\nCEX value changed to 1.4 from the default value in the code - 2. It changed the size of the black dot in the top left plot. It made the black dot smaller. Background color of the dot changed to ‘cornsilk3’ from the default ‘white’ in the same plot. It changed the color for the same plot.\n\nlibrary(readr)\nhpindex &lt;- read_csv(\"happy planet index.csv\")\n\nRows: 152 Columns: 11\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): COUNTRY, ISO, GDP PER CAPITA\ndbl (8): RANK, CONTINENT, POPU 1000s, LIFE EXPECTANCY, WELL BEING, ECOLOGICA...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nlif_exp &lt;- hpindex$`LIFE EXPECTANCY`\nhpi &lt;- hpindex$HPI\ngdp &lt;- hpindex$`GDP PER CAPITA`\nwell_being &lt;- hpindex$`WELL BEING`\necol_foot &lt;- hpindex$`ECOLOGICAL FOOTPRINT`\ncon &lt;- hpindex$`CONTINENT`\n\npar(mfrow=c(1,1))\ngdp_con &lt;- c(300991, 204169, 1092620, 478310, 172329, 46536, 607281, 366241)\n\npiepercent&lt;- round(100*gdp_con/sum(gdp_con), 1)\npar(mfrow=c(1, 1))\npie(gdp_con, labels = piepercent, main = \"GDP Pie Chart by continent\", col = rainbow(length(gdp_con)))\nlegend(\"topleft\", c(\"L America\",\"N America and Oceania\",\"W EU\",\"ME Asia\", \"Africa\", \n                    \"South Asia\", \"East Europe and Cent Asia\", \"East Asia\"), cex = 0.7,\n       fill = rainbow(length(gdp_con)))\n\n\n\n\n\npar(mfrow=c(1,1))\npar(bg = \"black\", col.axis = \"white\", col.lab = \"white\", col.main = \"white\", mar = c(5, 4, 4, 4) + 0.1)\n\nboxplot(`hpi` ~ `con`, data = hpindex, xlab = \"Continent\", ylab = \"Happiness Index\", col = \"white\", border = \"white\", fill = 1:8)\nlegend(\"bottomleft\", c(\"1 - L America\",\"2 - N America and Oceania\",\"3 - W EU\",\"4 - ME Asia\", \"5 - Africa\", \n                       \"6 - South Asia\", \"7 - East Europe and Cent Asia\", \"8 - East Asia\"), bg = \"white\",col = \"white\", border = \"white\", cex = 0.45)"
  },
  {
    "objectID": "Assignment 3.html",
    "href": "Assignment 3.html",
    "title": "Assignment 3",
    "section": "",
    "text": "data(anscombe)  # Load Anscombe's data\nsummary(anscombe)\n\n       x1             x2             x3             x4           y1        \n Min.   : 4.0   Min.   : 4.0   Min.   : 4.0   Min.   : 8   Min.   : 4.260  \n 1st Qu.: 6.5   1st Qu.: 6.5   1st Qu.: 6.5   1st Qu.: 8   1st Qu.: 6.315  \n Median : 9.0   Median : 9.0   Median : 9.0   Median : 8   Median : 7.580  \n Mean   : 9.0   Mean   : 9.0   Mean   : 9.0   Mean   : 9   Mean   : 7.501  \n 3rd Qu.:11.5   3rd Qu.:11.5   3rd Qu.:11.5   3rd Qu.: 8   3rd Qu.: 8.570  \n Max.   :14.0   Max.   :14.0   Max.   :14.0   Max.   :19   Max.   :10.840  \n       y2              y3              y4        \n Min.   :3.100   Min.   : 5.39   Min.   : 5.250  \n 1st Qu.:6.695   1st Qu.: 6.25   1st Qu.: 6.170  \n Median :8.140   Median : 7.11   Median : 7.040  \n Mean   :7.501   Mean   : 7.50   Mean   : 7.501  \n 3rd Qu.:8.950   3rd Qu.: 7.98   3rd Qu.: 8.190  \n Max.   :9.260   Max.   :12.74   Max.   :12.500  \n\n\n\nplot(anscombe$x1,anscombe$y1)\n\n\n\nsummary(anscombe)\n\n       x1             x2             x3             x4           y1        \n Min.   : 4.0   Min.   : 4.0   Min.   : 4.0   Min.   : 8   Min.   : 4.260  \n 1st Qu.: 6.5   1st Qu.: 6.5   1st Qu.: 6.5   1st Qu.: 8   1st Qu.: 6.315  \n Median : 9.0   Median : 9.0   Median : 9.0   Median : 8   Median : 7.580  \n Mean   : 9.0   Mean   : 9.0   Mean   : 9.0   Mean   : 9   Mean   : 7.501  \n 3rd Qu.:11.5   3rd Qu.:11.5   3rd Qu.:11.5   3rd Qu.: 8   3rd Qu.: 8.570  \n Max.   :14.0   Max.   :14.0   Max.   :14.0   Max.   :19   Max.   :10.840  \n       y2              y3              y4        \n Min.   :3.100   Min.   : 5.39   Min.   : 5.250  \n 1st Qu.:6.695   1st Qu.: 6.25   1st Qu.: 6.170  \n Median :8.140   Median : 7.11   Median : 7.040  \n Mean   :7.501   Mean   : 7.50   Mean   : 7.501  \n 3rd Qu.:8.950   3rd Qu.: 7.98   3rd Qu.: 8.190  \n Max.   :9.260   Max.   :12.74   Max.   :12.500  \n\n\n\nlm1 &lt;- lm(y1 ~ x1, data=anscombe)\nsummary(lm1)\n\n\nCall:\nlm(formula = y1 ~ x1, data = anscombe)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1.92127 -0.45577 -0.04136  0.70941  1.83882 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)   3.0001     1.1247   2.667  0.02573 * \nx1            0.5001     0.1179   4.241  0.00217 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.237 on 9 degrees of freedom\nMultiple R-squared:  0.6665,    Adjusted R-squared:  0.6295 \nF-statistic: 17.99 on 1 and 9 DF,  p-value: 0.00217\n\n\n\nlm2 &lt;- lm(y2 ~ x2, data=anscombe)\nsummary(lm2)\n\n\nCall:\nlm(formula = y2 ~ x2, data = anscombe)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-1.9009 -0.7609  0.1291  0.9491  1.2691 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)    3.001      1.125   2.667  0.02576 * \nx2             0.500      0.118   4.239  0.00218 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.237 on 9 degrees of freedom\nMultiple R-squared:  0.6662,    Adjusted R-squared:  0.6292 \nF-statistic: 17.97 on 1 and 9 DF,  p-value: 0.002179\n\n\n\nlm3 &lt;- lm(y3 ~ x3, data=anscombe)\nsummary(lm3)\n\n\nCall:\nlm(formula = y3 ~ x3, data = anscombe)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-1.1586 -0.6146 -0.2303  0.1540  3.2411 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)   3.0025     1.1245   2.670  0.02562 * \nx3            0.4997     0.1179   4.239  0.00218 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.236 on 9 degrees of freedom\nMultiple R-squared:  0.6663,    Adjusted R-squared:  0.6292 \nF-statistic: 17.97 on 1 and 9 DF,  p-value: 0.002176\n\n\n\nlm4 &lt;- lm(y4 ~ x4, data=anscombe)\nsummary(lm4)\n\n\nCall:\nlm(formula = y4 ~ x4, data = anscombe)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-1.751 -0.831  0.000  0.809  1.839 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)   3.0017     1.1239   2.671  0.02559 * \nx4            0.4999     0.1178   4.243  0.00216 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.236 on 9 degrees of freedom\nMultiple R-squared:  0.6667,    Adjusted R-squared:  0.6297 \nF-statistic:    18 on 1 and 9 DF,  p-value: 0.002165\n\n\n\nplot(anscombe$x1,anscombe$y1)\nabline(coefficients(lm1))\n\n\n\n\n\nplot(anscombe$x2,anscombe$y2)\nabline(coefficients(lm2))\n\n\n\n\n\nplot(anscombe$x3,anscombe$y3)\nabline(coefficients(lm3))\n\n\n\n\n\nplot(anscombe$x4,anscombe$y4)\nabline(coefficients(lm4))\n\n\n\n\n\nff &lt;- y ~ x\nmods &lt;- setNames(as.list(1:4), paste0(\"lm\", 1:4))\n\n# Plot using for loop\nfor(i in 1:4) {\n  ff[2:3] &lt;- lapply(paste0(c(\"y\",\"x\"), i), as.name)\n  ## or   ff[[2]] &lt;- as.name(paste0(\"y\", i))\n  ##      ff[[3]] &lt;- as.name(paste0(\"x\", i))\n  mods[[i]] &lt;- lmi &lt;- lm(ff, data = anscombe)\n  print(anova(lmi))\n}\n\nAnalysis of Variance Table\n\nResponse: y1\n          Df Sum Sq Mean Sq F value  Pr(&gt;F)   \nx1         1 27.510 27.5100   17.99 0.00217 **\nResiduals  9 13.763  1.5292                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nAnalysis of Variance Table\n\nResponse: y2\n          Df Sum Sq Mean Sq F value   Pr(&gt;F)   \nx2         1 27.500 27.5000  17.966 0.002179 **\nResiduals  9 13.776  1.5307                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nAnalysis of Variance Table\n\nResponse: y3\n          Df Sum Sq Mean Sq F value   Pr(&gt;F)   \nx3         1 27.470 27.4700  17.972 0.002176 **\nResiduals  9 13.756  1.5285                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nAnalysis of Variance Table\n\nResponse: y4\n          Df Sum Sq Mean Sq F value   Pr(&gt;F)   \nx4         1 27.490 27.4900  18.003 0.002165 **\nResiduals  9 13.742  1.5269                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\nsapply(mods, coef)  # Note the use of this function\n\n                  lm1      lm2       lm3       lm4\n(Intercept) 3.0000909 3.000909 3.0024545 3.0017273\nx1          0.5000909 0.500000 0.4997273 0.4999091\n\n\n\nlapply(mods, function(fm) coef(summary(fm)))\n\n$lm1\n             Estimate Std. Error  t value    Pr(&gt;|t|)\n(Intercept) 3.0000909  1.1247468 2.667348 0.025734051\nx1          0.5000909  0.1179055 4.241455 0.002169629\n\n$lm2\n            Estimate Std. Error  t value    Pr(&gt;|t|)\n(Intercept) 3.000909  1.1253024 2.666758 0.025758941\nx2          0.500000  0.1179637 4.238590 0.002178816\n\n$lm3\n             Estimate Std. Error  t value    Pr(&gt;|t|)\n(Intercept) 3.0024545  1.1244812 2.670080 0.025619109\nx3          0.4997273  0.1178777 4.239372 0.002176305\n\n$lm4\n             Estimate Std. Error  t value    Pr(&gt;|t|)\n(Intercept) 3.0017273  1.1239211 2.670763 0.025590425\nx4          0.4999091  0.1178189 4.243028 0.002164602\n\n\n\n# Preparing for the plots\nop &lt;- par(mfrow = c(2, 2), mar = 0.1+c(4,4,1,1), oma =  c(0, 0, 2, 0))\n\n# Plot charts using for loop\nfor(i in 1:4) {\n  ff[2:3] &lt;- lapply(paste0(c(\"y\",\"x\"), i), as.name)\n  plot(ff, data = anscombe, col = \"orchid\", pch = 17, bg = \"green\", cex = 1.2,\n       xlim = c(3, 19), ylim = c(3, 13))\n  abline(mods[[i]], col = \"indianred3\")\n}\nmtext(\"Anscombe's 4 Regression data sets\", outer = TRUE, cex = 1.5)\n\n\n\n\nRegression 1 - Variables falls on or near the regression line.\nRegression 2 - It does not fit the regression line unlike the first one.\nRegression 3 - Fits better than the regression 1 but with a single outlier.\nRegression 4 - In this one, the outlier falls on the regression line and the most of the variables are concentrated on one value making it a skewed regression overall.\n\nlibrary(tidyverse)\n\nWarning: package 'tidyverse' was built under R version 4.2.3\n\n\nWarning: package 'ggplot2' was built under R version 4.2.3\n\n\nWarning: package 'tibble' was built under R version 4.2.3\n\n\nWarning: package 'purrr' was built under R version 4.2.3\n\n\nWarning: package 'dplyr' was built under R version 4.2.3\n\n\nWarning: package 'lubridate' was built under R version 4.2.3\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(f1dataR)\n\nWarning: package 'f1dataR' was built under R version 4.2.3\n\n\nLoading required package: reticulate\n\n\nWarning: package 'reticulate' was built under R version 4.2.3\n\n\n\nggplot(data = anscombe, aes(x = x1, y = y1)) + geom_point(color = \"white\") +\n  geom_smooth(formula = y~x, method = \"lm\", se = FALSE, color = \"white\") +\n  theme_dark_f1(axis = TRUE)+\n  theme(panel.grid = element_blank())\n\n\n\n\n\nggplot(anscombe, aes(x = x1, y = y1)) +\n  geom_point(colour = \"black\", size = 3, shape = 8, fill = \"red\") +\n  geom_abline(intercept = coef(lm1)[1], slope = coef(lm1)[2], color = \"blue\") +\n  xlim(3, 19) + ylim(3, 13) +\n  labs(title = \"Regression Plot (lm1)\",\n       x = \"X1\",\n       y = \"Y1\") +\n  theme_minimal()\n\n\n\n\n\nggplot(data = anscombe, aes(x = x3, y = y4)) + geom_point(color = \"white\") +\n  geom_smooth(formula = y~x, method = \"lm\", se = FALSE, color = \"white\") +\n  theme_dark_f1(axis = TRUE)+\n  theme(panel.grid = element_blank())\n\n\n\n\n\nggplot(data = anscombe, aes(x = x2, y = y4)) + geom_point(color = \"white\") +\n  geom_smooth(formula = y~x, method = \"lm\", se = FALSE, color = \"white\") +\n  theme_dark_f1(axis = TRUE)+\n  theme(panel.grid = element_blank())\n\n\n\n\n\n## Download COVID data from OWID GitHub\nowidall = read.csv(\"https://github.com/owid/covid-19-data/blob/master/public/data/owid-covid-data.csv?raw=true\")\n# Deselect cases/rows with OWID\nowidall = owidall[!grepl(\"^OWID\", owidall$iso_code), ]\n# Subset by continent: Europe\nowideu = subset(owidall, continent==\"Europe\")\n\n#selected_countries &lt;- c(\"Spain\", \"Germany\", \"Ukraine\", \"Italy\")\n#owideu_selected &lt;- subset(owideu, location %in% selected_countries)\n\n# Change NA values to 0 for deaths\n#owideu[\"new_deaths\"][is.na(owideu[\"new_deaths\"])] &lt;- 0\n\nlibrary(ggplot2)\n\ndates &lt;- c(\"2020-01\", \"2020-02\", \"2020-04\", \"2020-06\", \"2020-08\", \n           \"2020-10\", \"2020-11\", \"2021-01\", \"2021-03\", \"2021-05\", \"2021-07\", \n           \"2021-08\", \"2021-10\", \"2021-12\", \"2022-04\", \"2022-06\", \"2022-09\", \n           \"2022-11\", \"2023-01\", \"2023-03\", \"2023-04\", \"2023-06\", \"2023-08\")\n\nvariable &lt;- ggplot(owideu, aes(x=date, y=new_deaths)) + geom_point(color='deeppink') + \n  scale_y_continuous(limits=c(0, 7000)) + xlab(\"Date\") + ylab(\"COVID Deaths in Europe (Daily)\") +\n  theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())\n\nvariable\n\nWarning: Removed 9 rows containing missing values (`geom_point()`)."
  },
  {
    "objectID": "finalprojdash.html",
    "href": "finalprojdash.html",
    "title": "Final Project Dashboard",
    "section": "",
    "text": "Authors: Rishika Katamneni, Mumuksha Singla, Ashutosh Patel and Priya Nalliah\n\n\n\n\n\nFinal Project Dashboard"
  },
  {
    "objectID": "Assignment 10.html",
    "href": "Assignment 10.html",
    "title": "Assignment 10",
    "section": "",
    "text": "library(htmlwidgets)\n\nWarning: package 'htmlwidgets' was built under R version 4.2.3\n\nlibrary(leaflet)\n\nWarning: package 'leaflet' was built under R version 4.2.3\n\nlibrary(tidyverse)\n\nWarning: package 'tidyverse' was built under R version 4.2.3\n\n\nWarning: package 'ggplot2' was built under R version 4.2.3\n\n\nWarning: package 'tibble' was built under R version 4.2.3\n\n\nWarning: package 'purrr' was built under R version 4.2.3\n\n\nWarning: package 'dplyr' was built under R version 4.2.3\n\n\nWarning: package 'lubridate' was built under R version 4.2.3\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n\n# Get EPPS geocode information (i.e. lon, lat) from online geocoder websites.\n# For example: https://www.mapdevelopers.com/geocode_tool.php\n\n# Create object using leaflet setting the view at EPPS geo location)\neppsmap &lt;- leaflet() %&gt;% setView(-96.7478372, 32.9886268, zoom=14)\n\n# Create object to acquire map data from ESRI\nesri &lt;- grep(\"^Esri\", providers, value = TRUE)\n\nfor (provider in esri) {\n  eppsmap &lt;- eppsmap %&gt;% addProviderTiles(provider, group = provider)\n}\n\nfindmeat &lt;- paste(sep = \"&lt;br/&gt;\",\n                  \"&lt;b&gt;&lt;img src='https://karlho.github.io/images/karlportrait140.png' alt='Karl Ho'  style='width:45px;height:60px;' align = 'right'&gt;&lt;/b&gt;\",\n                  \"&lt;b&gt;&lt;a href='http://karlho.com' target='_blank'&gt;Karl Ho &lt;/a&gt;&lt;/b&gt;\",\n                  \"&lt;b&gt;&lt;a href='http://epps.utdallas.edu' target='_blank'&gt;School of Economic, &lt;/a&gt;&lt;/b&gt;\",\n                  \"&lt;b&gt;&lt;a href='http://epps.utdallas.edu' target='_blank'&gt;Political and Policy Sciences&lt;/a&gt;&lt;/b&gt;\",\n                  \"&lt;b&gt;&lt;a href='http://www.utdallas.edu' target='_blank'&gt;University of Texsa at Dallas&lt;/a&gt;&lt;/b&gt;\",\n                  \"800 West Campbell Road, GR31\",\n                  \"Richardson TX 75080\"\n)\n\n# Use htmlwidget::onRender function to  add custom behavior to the leaflet map using native JavaScript.\n\neppsmap %&gt;%\n  addLayersControl(baseGroups = names(esri),\n                   options = layersControlOptions(collapsed = TRUE)) %&gt;%\n  # addMiniMap(tiles = esri[[1]], toggleDisplay = TRUE,\n  #           position = \"bottomleft\") %&gt;%\n  addMarkers(eppsmap, lng=-96.7478372, lat=32.9886268, popup=findmeat)  %&gt;%\n  htmlwidgets::onRender(\"\n                        function(el, x) {\n                        var myMap = this;\n                        myMap.on('baselayerchange',\n                        function (e) {\n                        myMap.minimap.changeLayer(L.tileLayer.provider(e.name));\n                        })\n                        }\")"
  },
  {
    "objectID": "Assignment 9.html",
    "href": "Assignment 9.html",
    "title": "Assignment 9",
    "section": "",
    "text": "library(quantmod)\n\nWarning: package 'quantmod' was built under R version 4.2.3\n\n\nLoading required package: xts\n\n\nWarning: package 'xts' was built under R version 4.2.3\n\n\nLoading required package: zoo\n\n\nWarning: package 'zoo' was built under R version 4.2.3\n\n\n\nAttaching package: 'zoo'\n\n\nThe following objects are masked from 'package:base':\n\n    as.Date, as.Date.numeric\n\n\nLoading required package: TTR\n\n\nRegistered S3 method overwritten by 'quantmod':\n  method            from\n  as.zoo.data.frame zoo \n\n\n\nlibrary(dygraphs)\n\nWarning: package 'dygraphs' was built under R version 4.2.3\n\nlibrary(TSstudio)\n\nWarning: package 'TSstudio' was built under R version 4.2.3\n\nAAPL &lt;- getSymbols(\"AAPL\",\n                    from = \"2011/01/01\",\n                    to = \"2020/12/31\",\n                    periodicity = \"daily\",\n                    auto.assign = FALSE)\n\n\nsum(is.na(AAPL))\n\n[1] 0\n\n\n\nclass(AAPL)\n\n[1] \"xts\" \"zoo\"\n\n\n\nhead(AAPL)\n\n           AAPL.Open AAPL.High AAPL.Low AAPL.Close AAPL.Volume AAPL.Adjusted\n2011-01-03  11.63000  11.79500 11.60143   11.77036   445138400      9.977494\n2011-01-04  11.87286  11.87500 11.71964   11.83179   309080800     10.029566\n2011-01-05  11.76964  11.94071 11.76786   11.92857   255519600     10.111609\n2011-01-06  11.95429  11.97321 11.88929   11.91893   300428800     10.103434\n2011-01-07  11.92821  12.01250 11.85357   12.00429   311931200     10.175790\n2011-01-10  12.10107  12.25821 12.04179   12.23036   448560000     10.367426\n\n\n\nchartSeries(AAPL, type = c(\"auto\", \"candlesticks\", \"matchsticks\", \"bars\",\"line\"), subset='last 3 months',theme = \"white\")\n\n\n\n\n\nbarChart(AAPL,multi.col=TRUE,theme = 'white')\n\n\n\n\n\nquantmod::getSymbols(\"AAPL\", src=\"yahoo\")\n\n[1] \"AAPL\"\n\n\n\nclass(AAPL)\n\n[1] \"xts\" \"zoo\"\n\n\n\nts_plot(AAPL$AAPL.Adjusted, \n        title = \"Apple Stock prices\",\n        Ytitle = \"\")"
  }
]